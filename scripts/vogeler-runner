#!/usr/bin/env python
"""
    Author: John E. Vincent
	Email:	lusis.org+github.com@gmail.com
"""
import argparse

import vogeler.log as logger
import vogeler.conf as conf

from vogeler.runner import VogelerRunner

if __name__ == '__main__':
    appdesc = 'Vogeler command runner'
    parser = argparse.ArgumentParser(description=appdesc)
    parser.add_argument('--config', '-c',
                help='Path to configuration file',
                required=False)
    parser.add_argument('--command', '-x',
                help='Command to issue to clients',
                required=True)
    parser.add_argument('--node', '-n',
                help='Clients to get the command. Use "all" for broadcast',
                required=True)
    parser.add_argument('--qhost',
                help='Vogeler Queue Server',
                required=False)

    args = parser.parse_args()

    if args.config:
        try:
            local_config = conf.configure(cfg=args.config)
            if local_config.has_option('global', 'log_level'):
                log_level = local_config.get('global', 'log_level') or 'DEBUG'
                log = logger.setup_logger(logLevel=log_level)
        except:
            raise

    global mq
    try:
        mq = args.qhost or local_config.get('amqp', 'dsn')
    except:
        mq = None

def run(pargs):
    print mq
    command = pargs.command
    if pargs.node == 'all':
        routing_key = 'broadcasts.*'
    else:
        routing_key = pargs.node

    p = VogelerRunner(routing_key, dsn=mq)

    try:
        p.message(command)
        print "Sending %s to %s" % (pargs.command, pargs.node)
    except:
        raise

run(args)
# vim: set ts=4 et sw=4 sts=4 sta filetype=python :
